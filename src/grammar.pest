// WHITESPACE ігнорується парсером та відповідає пробілам, табуляціям та переведенням рядка
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

// Корінне правило, яке представляє повне значення JSON
JSON = { SOI ~ VALUE ~ EOI }

// Значення JSON, яке може бути об'єктом, масивом, рядком, числом або літерами true, false, null
VALUE = { OBJECT | ARRAY | STRING | NUMBER | TRUE | FALSE | NULL }

// Об'єкт JSON, який є колекцією пар ключ-значення, укладених у фігурні дужки
OBJECT = { "{" ~ MEMBERS? ~ "}" }

// Список пар ключ-значення в об'єкті
MEMBERS = { PAIR ~ ("," ~ PAIR)* }

// Пара ключ-значення в об'єкті
PAIR = { STRING ~ ":" ~ VALUE }

// Масив JSON, який є впорядкованою колекцією значень, укладених у квадратні дужки
ARRAY = { "[" ~ ELEMENTS? ~ "]" }

// Список значень в масиві
ELEMENTS = { VALUE ~ ("," ~ VALUE)* }

// Рядок JSON, укладений у подвійні лапки, можливо, з екранованими символами
STRING = { "\"" ~ (ESCAPED_CHAR | NON_ESCAPED_CHAR)* ~ "\"" }

// Екранований символ у рядку
ESCAPED_CHAR = { "\\" ~ ( "\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" ) }

// Символ, який не є лапкою або зворотним слешем
NON_ESCAPED_CHAR = { !( "\"" | "\\" ) ~ ANY }

// Число JSON, яке може бути цілим,дробовим, або негативним
NUMBER = { "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }

// Літерал true
TRUE  = { "true" }

// Літерал false
FALSE = { "false" }

// Літерал null
NULL  = { "null" }
